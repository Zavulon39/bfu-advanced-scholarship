{"version":3,"sources":["store/CompanyContext.tsx","store/RequestContext.tsx","store/AuthContext.tsx","components/Header.tsx","pages/admin/AdminCompanyListPage.tsx","pages/admin/AdminRequestDetailPage.tsx","pages/admin/AdminRequestListPage.tsx","pages/AuthPage.tsx","pages/student/StudentCompanyListPage.tsx","pages/student/StudentRequestDetailPage.tsx","App.tsx","hooks/useRouter.tsx","index.tsx"],"names":["initialState","companies","fetchCompanies","deleteCompany","createCompany","editCompany","reducer","state","action","type","payload","id","Date","now","name","startDate","endDate","map","c","filter","CompanyContext","createContext","CompanyProvider","children","useReducer","dispatch","Provider","value","e","requests","nominations","statuses","fetchRequests","setPoints","setExamPoints","addComment","addRequest","setStudentExamPoints","setStudentData","setAward","r","tables","tableIdx","body","rowIdx","points","award","point","examPoints","comments","push","imageUrl","text","sendedDate","data","dataIdx","RequestContext","RequestProvider","studentId","companyId","company","nomination","status","createdDate","fio","educationForm","phone","financingSource","institute","level","direction","course","percent","title","header","Array","from","Set","learningPlans","avatarUrl","role","login","AuthContext","AuthProvider","AdminHeader","useNavigate","navbar","useRef","tooltipRef1","tooltipRef2","useState","setTitle","useContext","useEffect","M","Sidenav","init","current","Tooltip","useLayoutEffect","updateSize","window","innerWidth","addEventListener","removeEventListener","className","to","href","ref","style","marginBottom","src","objectFit","width","height","StudentHeader","AdminCompanyListPage","createData","setCreateData","undefined","editData","setEditData","createModalRef","editModalRef","startCreateDatePickerRef","endCreateDatePickerRef","startEditDatePickerRef","endEditDatePickerRef","length","Modal","Datepicker","container","document","querySelector","format","onSelect","selectedDate","prev","onClick","getInstance","open","toLocaleDateString","find","editClickHandler","marginLeft","toast","html","classes","deleteClickHandler","marginTop","onChange","event","target","htmlFor","close","AdminRequestDetailPage","useParams","pointRef","messageRef","request","Number","message","setMessage","focus","CharacterCounter","onKeyPress","test","key","preventDefault","maxWidth","t","tIdx","Fragment","h","hIdx","rIdx","b","bIdx","URL","float","idx","alt","toLocaleString","AdminRequestListPage","qs","setQs","setFio","select1","select2","select3","FormSelect","n","s","fio_cond","toLowerCase","indexOf","company_cond","nomination_cond","status_cond","AuthPage","authData","setAuthData","selectRed","StudentCompanyListPage","companyData","setCompanyData","nominationRef","planRef","createClickHandler","p","multiple","select","opt","result","options","i","iLen","selected","getSelectValues","join","StudentRequestDetailPage","App","routes","path","element","useRouter","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.74641bab.chunk.js","sourcesContent":["import React, { createContext, ReactElement, useReducer } from 'react'\r\nimport { ICompanyState, IAction, ICompany } from '../types/companies'\r\n\r\nconst initialState: ICompanyState = {\r\n  companies: [],\r\n  fetchCompanies: () => {},\r\n  deleteCompany: () => {},\r\n  createCompany: () => {},\r\n  editCompany: () => {},\r\n}\r\n\r\ninterface IProps {\r\n  children?: ReactElement\r\n}\r\n\r\nconst reducer = (state = initialState, action: IAction): ICompanyState => {\r\n  switch (action.type) {\r\n    case 'SET_COMPANIES':\r\n      return { ...state, companies: action.payload }\r\n    case 'CREATE_COMPANY':\r\n      return {\r\n        ...state,\r\n        companies: [\r\n          ...state.companies,\r\n          {\r\n            id: Date.now(),\r\n            name: action.payload.name,\r\n            startDate: action.payload.startDate,\r\n            endDate: action.payload.endDate,\r\n          },\r\n        ],\r\n      }\r\n    case 'EDIT_COMPANY':\r\n      return {\r\n        ...state,\r\n        companies: state.companies.map(c => {\r\n          if (c.id == action.payload.id) {\r\n            c.name = action.payload.name\r\n            c.startDate = action.payload.startDate\r\n            c.endDate = action.payload.endDate\r\n          }\r\n          return c\r\n        }),\r\n      }\r\n    case 'DELETE_COMPANY':\r\n      return {\r\n        ...state,\r\n        companies: state.companies.filter(c => c.id !== action.payload),\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const CompanyContext = createContext(initialState)\r\n\r\nexport const CompanyProvider = ({ children }: IProps) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n  const fetchCompanies = () => {\r\n    try {\r\n      // fetch\r\n\r\n      const payload: ICompany[] = [\r\n        {\r\n          id: 1,\r\n          name: 'Весна 2019',\r\n          startDate: new Date(),\r\n          endDate: new Date(),\r\n        },\r\n        {\r\n          id: 2,\r\n          name: 'Весна 2020',\r\n          startDate: new Date(),\r\n          endDate: new Date(),\r\n        },\r\n      ]\r\n\r\n      dispatch({\r\n        type: 'SET_COMPANIES',\r\n        payload,\r\n      })\r\n    } catch (e) {\r\n      dispatch({\r\n        type: 'SET_COMPANIES',\r\n        payload: [\r\n          {\r\n            id: 1,\r\n            name: `Ошибка при получении данных: ${e}`,\r\n            startDate: new Date(),\r\n            endDate: new Date(),\r\n          },\r\n        ],\r\n      })\r\n    }\r\n  }\r\n  const deleteCompany = (id: number) => {\r\n    // fetch\r\n    dispatch({\r\n      type: 'DELETE_COMPANY',\r\n      payload: id,\r\n    })\r\n  }\r\n  const createCompany = (name: string, startDate: Date, endDate: Date) => {\r\n    // fetch\r\n    // get id from fetch\r\n    dispatch({\r\n      type: 'CREATE_COMPANY',\r\n      payload: {\r\n        name,\r\n        startDate,\r\n        endDate,\r\n      },\r\n    })\r\n  }\r\n  const editCompany = (\r\n    id: number,\r\n    name: string,\r\n    startDate: Date,\r\n    endDate: Date\r\n  ) => {\r\n    // fetch\r\n    dispatch({\r\n      type: 'EDIT_COMPANY',\r\n      payload: {\r\n        id,\r\n        name,\r\n        startDate,\r\n        endDate,\r\n      },\r\n    })\r\n  }\r\n\r\n  return (\r\n    <CompanyContext.Provider\r\n      value={{\r\n        ...state,\r\n        fetchCompanies,\r\n        createCompany,\r\n        deleteCompany,\r\n        editCompany,\r\n      }}\r\n    >\r\n      {children}\r\n    </CompanyContext.Provider>\r\n  )\r\n}\r\n","import React, { createContext, ReactElement, useReducer } from 'react'\r\nimport { IAction } from '../types/companies'\r\nimport { IRequestState, IRequest, IComment, ITable } from '../types/request'\r\n\r\nconst initialState: IRequestState = {\r\n  requests: [],\r\n  nominations: [],\r\n  statuses: [],\r\n  companies: [],\r\n  fetchRequests: () => {},\r\n  setPoints: () => {},\r\n  setExamPoints: () => {},\r\n  addComment: () => {},\r\n  addRequest: () => {},\r\n  setStudentExamPoints: () => {},\r\n  setStudentData: () => {},\r\n  setAward: () => {},\r\n}\r\n\r\ninterface IProps {\r\n  children?: ReactElement\r\n}\r\n\r\nconst reducer = (\r\n  state = initialState,\r\n  { payload, type }: IAction\r\n): IRequestState => {\r\n  switch (type) {\r\n    case 'SET_REQUESTS':\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n      }\r\n    case 'SET_POINTS':\r\n      return {\r\n        ...state,\r\n        requests: state.requests.map(r => {\r\n          if (r.id === payload.id) {\r\n            r.tables[payload.tableIdx].body[payload.rowIdx].points =\r\n              payload.points\r\n\r\n            return r\r\n          }\r\n\r\n          return r\r\n        }),\r\n      }\r\n    case 'SET_AWARD':\r\n      return {\r\n        ...state,\r\n        requests: state.requests.map(r => {\r\n          if (r.id === payload.id) {\r\n            r.tables[payload.tableIdx].body[payload.rowIdx].award =\r\n              payload.award\r\n\r\n            return r\r\n          }\r\n\r\n          return r\r\n        }),\r\n      }\r\n    case 'SET_EXAM_POINTS':\r\n      return {\r\n        ...state,\r\n        requests: state.requests.map(r => {\r\n          if (r.id === payload.id) {\r\n            r.point = payload.points\r\n          }\r\n          return r\r\n        }),\r\n      }\r\n    case 'SET_STUDENT_EXAM_POINTS':\r\n      return {\r\n        ...state,\r\n        requests: state.requests.map(r => {\r\n          if (r.id === payload.id) {\r\n            r.examPoints = payload.points\r\n          }\r\n          return r\r\n        }),\r\n      }\r\n    case 'ADD_COMMENT':\r\n      return {\r\n        ...state,\r\n        requests: state.requests.map(r => {\r\n          if (r.id === payload.id) {\r\n            r.comments.push({\r\n              name: payload.name,\r\n              imageUrl: payload.imageUrl,\r\n              text: payload.text,\r\n              sendedDate: new Date(),\r\n            })\r\n          }\r\n          return r\r\n        }),\r\n      }\r\n    case 'ADD_REQUEST':\r\n      return {\r\n        ...state,\r\n        requests: [\r\n          ...state.requests,\r\n          {\r\n            id: Date.now(),\r\n            ...payload,\r\n          },\r\n        ],\r\n      }\r\n    case 'SET_STUDENT_DATA':\r\n      return {\r\n        ...state,\r\n        requests: state.requests.map(r => {\r\n          if (r.id === payload.id) {\r\n            r.tables[payload.tableIdx].body[payload.rowIdx].data[\r\n              payload.dataIdx\r\n            ] = payload.value\r\n\r\n            return r\r\n          }\r\n\r\n          return r\r\n        }),\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const RequestContext = createContext(initialState)\r\n\r\nexport const RequestProvider = ({ children }: IProps) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n  const fetchRequests = () => {\r\n    try {\r\n      // fetch\r\n\r\n      const comments: IComment[] = [\r\n        {\r\n          name: 'Mike',\r\n          sendedDate: new Date(),\r\n          imageUrl: 'https://place-hold.it/120x120/aaaaaa/f5f5f5',\r\n          text: 'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Accusantium illo commodi vel, aspernatur mollitia voluptatibus incidunt, dicta dignissimos tenetur ex quisquam sit! Iure cupiditate voluptatem minus iste repellat iusto ea.',\r\n        },\r\n        {\r\n          name: 'John',\r\n          sendedDate: new Date(),\r\n          imageUrl: 'https://place-hold.it/120x120/444444/f5f5f5',\r\n          text: 'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Accusantium illo commodi vel, aspernatur mollitia voluptatibus incidunt, dicta dignissimos tenetur ex quisquam sit! Iure cupiditate voluptatem minus iste repellat iusto ea.',\r\n        },\r\n      ]\r\n      const requests: IRequest[] = [\r\n        {\r\n          id: 1,\r\n          studentId: 1,\r\n          companyId: 1,\r\n          company: 'Весна 2019',\r\n          nomination: 'Учебная',\r\n          status: 'Черновик',\r\n          createdDate: new Date(),\r\n\r\n          fio: 'Бенько Игорь Анатольевич',\r\n          educationForm: 'очное обучение',\r\n          phone: '8 800 555 3535',\r\n          financingSource: 'Бюджет',\r\n          institute: 'Институт высшего матана',\r\n          level: 'Аспирант',\r\n          direction: 'Высший матан',\r\n          course: 3,\r\n\r\n          percent: 'Отлично',\r\n          examPoints: 12,\r\n          point: 0,\r\n\r\n          tables: [\r\n            {\r\n              id: 1,\r\n              title: 'Олимпиады и конкурсы',\r\n              header: ['Название', 'Тип', 'Статус', 'Год', 'Документ'],\r\n              body: [\r\n                {\r\n                  points: 10,\r\n                  award: 'Призёр',\r\n                  data: [\r\n                    'test1',\r\n                    'Другое',\r\n                    'Другое',\r\n                    '2000',\r\n                    'https://jsonplaceholder.typicode.com/todos/1',\r\n                  ],\r\n                },\r\n                {\r\n                  award: 'Призёр',\r\n                  points: 0,\r\n                  data: [\r\n                    'test2',\r\n                    'Другое',\r\n                    'Другое',\r\n                    '2000',\r\n                    'https://jsonplaceholder.typicode.com/todos/1',\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              id: 2,\r\n              title: 'Доп. достижения',\r\n              header: ['Название', 'Тип', 'Статус', 'Год', 'Документ'],\r\n              body: [\r\n                {\r\n                  award: 'Призёр',\r\n                  points: 10,\r\n                  data: [\r\n                    'test1',\r\n                    'Другое',\r\n                    'Другое',\r\n                    '2000',\r\n                    'https://jsonplaceholder.typicode.com/todos/1',\r\n                  ],\r\n                },\r\n                {\r\n                  award: 'Призёр',\r\n                  points: 0,\r\n                  data: [\r\n                    'test2',\r\n                    'Другое',\r\n                    'Другое',\r\n                    '2000',\r\n                    'https://jsonplaceholder.typicode.com/todos/1',\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n          comments,\r\n        },\r\n        {\r\n          id: 2,\r\n          studentId: 1,\r\n          companyId: 1,\r\n          company: 'Весна 2019',\r\n          nomination: 'Учебная',\r\n          status: 'Победитель',\r\n          createdDate: new Date(),\r\n\r\n          fio: 'Кукушкина Алиса Андреевна',\r\n          educationForm: 'очное обучение',\r\n          phone: '8 800 555 7878',\r\n          financingSource: 'Бюджет',\r\n          institute: 'Институт высшего матана',\r\n          level: 'Бакалавр',\r\n          direction: 'Высший матан',\r\n          course: 2,\r\n\r\n          percent: 'Отлично',\r\n          examPoints: 12,\r\n          point: 0,\r\n\r\n          tables: [],\r\n          comments: [],\r\n        },\r\n      ]\r\n      const nominations = Array.from(new Set(['Учебная', 'Спортивная']))\r\n      const statuses = Array.from(new Set(['Победитель', 'Черновик']))\r\n      const companies = Array.from(\r\n        new Set([\r\n          {\r\n            name: 'Весна 2019',\r\n            id: 1,\r\n          },\r\n          {\r\n            name: 'Весна 2020',\r\n            id: 2,\r\n          },\r\n        ])\r\n      )\r\n\r\n      dispatch({\r\n        type: 'SET_REQUESTS',\r\n        payload: {\r\n          requests,\r\n          nominations,\r\n          statuses,\r\n          companies,\r\n        },\r\n      })\r\n    } catch (e) {\r\n      dispatch({\r\n        type: 'SET_REQUESTS',\r\n        payload: {\r\n          requests: {\r\n            id: 0,\r\n            companyId: 0,\r\n            company: `null`,\r\n            nomination: 'null',\r\n            status: 'null',\r\n            createdDate: new Date(),\r\n\r\n            fio: `Ошибка при получении данных: ${e}`,\r\n            educationForm: 'null',\r\n            phone: 'null',\r\n            financingSource: 'null',\r\n            institute: 'null',\r\n            level: 'null',\r\n            direction: 'null',\r\n            course: 0,\r\n\r\n            tables: [],\r\n          },\r\n        },\r\n      })\r\n    }\r\n  }\r\n  const setPoints = (\r\n    id: number,\r\n    tableIdx: number,\r\n    rowIdx: number,\r\n    points: number\r\n  ) =>\r\n    // fetch\r\n    dispatch({\r\n      type: 'SET_POINTS',\r\n      payload: {\r\n        id,\r\n        tableIdx,\r\n        rowIdx,\r\n        points,\r\n      },\r\n    })\r\n\r\n  const setExamPoints = (id: number, points: number) => {\r\n    // fetch\r\n    dispatch({\r\n      type: 'SET_EXAM_POINTS',\r\n      payload: {\r\n        id,\r\n        points,\r\n      },\r\n    })\r\n  }\r\n  const setStudentExamPoints = (id: number, points: number) => {\r\n    // fetch\r\n    dispatch({\r\n      type: 'SET_STUDENT_EXAM_POINTS',\r\n      payload: {\r\n        id,\r\n        points,\r\n      },\r\n    })\r\n  }\r\n  const addComment = (\r\n    id: number,\r\n    name: string,\r\n    imageUrl: string,\r\n    text: string\r\n  ) => {\r\n    // fetch\r\n    dispatch({\r\n      type: 'ADD_COMMENT',\r\n      payload: {\r\n        id,\r\n        name,\r\n        imageUrl,\r\n        text,\r\n      },\r\n    })\r\n  }\r\n  const addRequest = (\r\n    companyId: number,\r\n    studentId: number,\r\n    company: string,\r\n    nomination: string,\r\n    status: string,\r\n    createdDate: Date,\r\n    fio: string,\r\n    learningPlans: string\r\n  ) => {\r\n    // fetch\r\n    // get tables and id from fetch\r\n\r\n    dispatch({\r\n      type: 'ADD_REQUEST',\r\n      payload: {\r\n        companyId,\r\n        studentId,\r\n        company,\r\n        nomination,\r\n        status,\r\n        createdDate,\r\n        fio,\r\n\r\n        // get all this fields from fetch\r\n        educationForm: 'educationForm',\r\n        phone: 'phone',\r\n        financingSource: 'financingSource',\r\n        institute: 'institute',\r\n        level: 'level',\r\n        direction: 'direction',\r\n        course: 'course',\r\n        percent: '',\r\n        examPoints: 0,\r\n        point: 0,\r\n        tables: [],\r\n        comments: [],\r\n      },\r\n    })\r\n  }\r\n  const setStudentData = (\r\n    id: number,\r\n    tableIdx: number,\r\n    rowIdx: number,\r\n    dataIdx: number,\r\n    value: string\r\n  ) => {\r\n    // fetch\r\n    dispatch({\r\n      type: 'SET_STUDENT_DATA',\r\n      payload: {\r\n        id,\r\n        tableIdx,\r\n        rowIdx,\r\n        dataIdx,\r\n        value,\r\n      },\r\n    })\r\n  }\r\n  const setAward = (\r\n    id: number,\r\n    tableIdx: number,\r\n    rowIdx: number,\r\n    award: string\r\n  ) => {\r\n    // fetch\r\n    dispatch({\r\n      type: 'SET_AWARD',\r\n      payload: {\r\n        id,\r\n        tableIdx,\r\n        rowIdx,\r\n        award,\r\n      },\r\n    })\r\n  }\r\n\r\n  return (\r\n    <RequestContext.Provider\r\n      value={{\r\n        ...state,\r\n        fetchRequests,\r\n        setPoints,\r\n        setExamPoints,\r\n        setStudentExamPoints,\r\n        addComment,\r\n        addRequest,\r\n        setStudentData,\r\n        setAward,\r\n      }}\r\n    >\r\n      {children}\r\n    </RequestContext.Provider>\r\n  )\r\n}\r\n","import React, { createContext, ReactElement, useReducer } from 'react'\r\nimport { IAuthState, Role } from '../types/auth'\r\nimport { IAction } from '../types/companies'\r\n\r\nconst initialState: IAuthState = {\r\n  id: 0,\r\n  fio: '',\r\n  avatarUrl: 'https://place-hold.it/120x120/ff9d00/f5f5f5',\r\n  role: 'anonymous',\r\n  learningPlans: [],\r\n\r\n  login: () => {},\r\n}\r\n\r\ninterface IProps {\r\n  children?: ReactElement\r\n}\r\n\r\nconst reducer = (state = initialState, action: IAction): IAuthState => {\r\n  switch (action.type) {\r\n    case 'LOGIN':\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const AuthContext = createContext(initialState)\r\n\r\nexport const AuthProvider = ({ children }: IProps) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n  const login = (\r\n    id: number,\r\n    fio: string,\r\n    avatarUrl: string,\r\n    role: Role,\r\n    learningPlans: string[]\r\n  ) => {\r\n    dispatch({\r\n      type: 'LOGIN',\r\n      payload: {\r\n        id,\r\n        fio,\r\n        avatarUrl,\r\n        role,\r\n        learningPlans,\r\n      },\r\n    })\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        ...state,\r\n        login,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n","import React, {\r\n  FC,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n  useLayoutEffect,\r\n} from 'react'\r\nimport M from 'materialize-css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { AuthContext } from '../store/AuthContext'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport const AdminHeader: FC = () => {\r\n  const navigate = useNavigate()\r\n  const navbar = useRef(null)\r\n  const tooltipRef1 = useRef(null)\r\n  const tooltipRef2 = useRef(null)\r\n  const [title, setTitle] = useState(\r\n    'Повышенная государственная академическая стипендия'\r\n  )\r\n  const { fio, avatarUrl, role } = useContext(AuthContext)\r\n\r\n  useEffect(() => {\r\n    M.Sidenav.init(navbar.current!)\r\n    M.Tooltip.init(tooltipRef1.current!)\r\n    M.Tooltip.init(tooltipRef2.current!)\r\n  }, [])\r\n\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      if (window.innerWidth < 1280)\r\n        setTitle('Государственная академическая стипендия')\r\n      if (window.innerWidth < 1050) setTitle('Академическая стипендия')\r\n      if (window.innerWidth < 800) setTitle('ПГАС')\r\n    }\r\n    window.addEventListener('resize', updateSize)\r\n    updateSize()\r\n    return () => window.removeEventListener('resize', updateSize)\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <nav className='blue darken-4 px-4'>\r\n        <div className='nav-wrapper'>\r\n          <NavLink to='/' className='brand-logo'>\r\n            {title}\r\n          </NavLink>\r\n          <a href='#' data-target='mobile-demo' className='sidenav-trigger'>\r\n            <i className='material-icons'>menu</i>\r\n          </a>\r\n          <ul className='right hide-on-med-and-down'>\r\n            <li>\r\n              <NavLink to='/admin/companies/'>Список компаний</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to='/admin/requests/'>Список заявок</NavLink>\r\n            </li>\r\n            {role !== 'anonymous' ? (\r\n              <li>\r\n                <a\r\n                  href='#'\r\n                  className='btn-floating btn-large tooltipped waves-effect'\r\n                  data-position='bottom'\r\n                  data-tooltip={fio}\r\n                  ref={tooltipRef1}\r\n                  style={{\r\n                    marginBottom: 2,\r\n                  }}\r\n                >\r\n                  <img\r\n                    src={avatarUrl}\r\n                    style={{\r\n                      objectFit: 'cover',\r\n                      width: 56,\r\n                      height: 56,\r\n                    }}\r\n                  />\r\n                </a>\r\n              </li>\r\n            ) : null}\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n\r\n      <ul className='sidenav' id='mobile-demo' ref={navbar}>\r\n        {role !== 'anonymous' ? (\r\n          <li>\r\n            <a\r\n              href='#'\r\n              className='btn-floating btn-large tooltipped waves-effect'\r\n              data-position='bottom'\r\n              data-tooltip={fio}\r\n              ref={tooltipRef2}\r\n              style={{\r\n                marginBottom: 2,\r\n              }}\r\n            >\r\n              <img\r\n                src={avatarUrl}\r\n                style={{\r\n                  objectFit: 'cover',\r\n                  width: 56,\r\n                  height: 56,\r\n                }}\r\n              />\r\n            </a>\r\n          </li>\r\n        ) : null}\r\n        <li>\r\n          <NavLink to='/admin/companies/'>Список компаний</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to='/admin/requests/'>Список заявок</NavLink>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nexport const StudentHeader: FC = () => {\r\n  const navigate = useNavigate()\r\n  const navbar = useRef(null)\r\n  const tooltipRef1 = useRef(null)\r\n  const tooltipRef2 = useRef(null)\r\n  const [title, setTitle] = useState(\r\n    'Повышенная государственная академическая стипендия'\r\n  )\r\n  const { fio, avatarUrl, role } = useContext(AuthContext)\r\n\r\n  useEffect(() => {\r\n    M.Sidenav.init(navbar.current!)\r\n    M.Tooltip.init(tooltipRef1.current!)\r\n    M.Tooltip.init(tooltipRef2.current!)\r\n  }, [])\r\n\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      if (window.innerWidth < 1280)\r\n        setTitle('Государственная академическая стипендия')\r\n      if (window.innerWidth < 1050) setTitle('Академическая стипендия')\r\n      if (window.innerWidth < 800) setTitle('ПГАС')\r\n    }\r\n    window.addEventListener('resize', updateSize)\r\n    updateSize()\r\n    return () => window.removeEventListener('resize', updateSize)\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <nav className='blue darken-4 px-4'>\r\n        <div className='nav-wrapper'>\r\n          <NavLink to='/' className='brand-logo'>\r\n            {title}\r\n          </NavLink>\r\n          <a href='#' data-target='mobile-demo' className='sidenav-trigger'>\r\n            <i className='material-icons'>menu</i>\r\n          </a>\r\n          <ul className='right hide-on-med-and-down'>\r\n            <li>\r\n              <NavLink to='/companies/'>Список компаний</NavLink>\r\n            </li>\r\n            {role !== 'anonymous' ? (\r\n              <li>\r\n                <a\r\n                  href='#'\r\n                  className='btn-floating btn-large tooltipped waves-effect'\r\n                  data-position='bottom'\r\n                  data-tooltip={fio}\r\n                  ref={tooltipRef1}\r\n                  style={{\r\n                    marginBottom: 2,\r\n                  }}\r\n                >\r\n                  <img\r\n                    src={avatarUrl}\r\n                    style={{\r\n                      objectFit: 'cover',\r\n                      width: 56,\r\n                      height: 56,\r\n                    }}\r\n                  />\r\n                </a>\r\n              </li>\r\n            ) : null}\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n\r\n      <ul className='sidenav' id='mobile-demo' ref={navbar}>\r\n        {role !== 'anonymous' ? (\r\n          <li>\r\n            <a\r\n              href='#'\r\n              className='btn-floating btn-large tooltipped waves-effect'\r\n              data-position='bottom'\r\n              data-tooltip={fio}\r\n              ref={tooltipRef2}\r\n              style={{\r\n                marginBottom: 2,\r\n              }}\r\n            >\r\n              <img\r\n                src={avatarUrl}\r\n                style={{\r\n                  objectFit: 'cover',\r\n                  width: 56,\r\n                  height: 56,\r\n                }}\r\n              />\r\n            </a>\r\n          </li>\r\n        ) : null}\r\n        <li>\r\n          <NavLink to='/companies/'>Список компаний</NavLink>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n","import React, { FC, useContext, useEffect, useRef, useState } from 'react'\r\nimport { AdminHeader } from '../../components/Header'\r\nimport { CompanyContext } from '../../store/CompanyContext'\r\nimport M from 'materialize-css'\r\n\r\nexport const AdminCompanyListPage: FC = () => {\r\n  const {\r\n    companies,\r\n    fetchCompanies,\r\n    deleteCompany,\r\n    createCompany,\r\n    editCompany,\r\n  } = useContext(CompanyContext)\r\n  const [createData, setCreateData] = useState<{\r\n    name: null | string\r\n    startDate: null | Date\r\n    endDate: null | Date\r\n  }>({\r\n    name: null,\r\n    startDate: null,\r\n    endDate: null,\r\n  })\r\n  const [editData, setEditData] = useState<{\r\n    id: undefined | number\r\n    name: undefined | string\r\n    startDate: undefined | Date\r\n    endDate: undefined | Date\r\n  }>({\r\n    id: undefined,\r\n    name: undefined,\r\n    startDate: undefined,\r\n    endDate: undefined,\r\n  })\r\n  const createModalRef = useRef(null)\r\n  const editModalRef = useRef(null)\r\n  const startCreateDatePickerRef = useRef(null)\r\n  const endCreateDatePickerRef = useRef(null)\r\n  const startEditDatePickerRef = useRef(null)\r\n  const endEditDatePickerRef = useRef(null)\r\n\r\n  const createClickHandler = () => {\r\n    const i = M.Modal.getInstance(createModalRef.current!)\r\n    i.open()\r\n  }\r\n  const editClickHandler = (id: number) => {\r\n    const company = companies.find(c => c.id === id)\r\n    setEditData({\r\n      id,\r\n      name: company?.name,\r\n      startDate: company?.startDate,\r\n      endDate: company?.endDate,\r\n    })\r\n\r\n    const i = M.Modal.getInstance(editModalRef.current!)\r\n    i.open()\r\n  }\r\n\r\n  const deleteClickHandler = (id: number, name: string) => {\r\n    try {\r\n      deleteCompany(id)\r\n      M.toast({\r\n        html: `<span>Компания <b>${name}</b> была успешна удалена!</span>`,\r\n        classes: 'light-blue darken-1',\r\n      })\r\n    } catch (e) {\r\n      M.toast({\r\n        html: `<span>Что-то пошло не так: <b>${e}</b></span>`,\r\n        classes: 'red darken-4',\r\n      })\r\n    }\r\n  }\r\n  const modalCreateClickHandler = () => {\r\n    if (createData.name && createData.endDate && createData.startDate) {\r\n      try {\r\n        createCompany(createData.name, createData.startDate, createData.endDate)\r\n\r\n        return M.toast({\r\n          html: `<span>Компания <b>${createData.name}</b> была успешна добавлена!</span>`,\r\n          classes: 'light-blue darken-1',\r\n        })\r\n      } catch (e) {\r\n        return M.toast({\r\n          html: `<span>Что-то пошло не так: <b>${e}</b></span>`,\r\n          classes: 'red darken-4',\r\n        })\r\n      }\r\n    }\r\n    M.toast({\r\n      html: 'Зполните все поля формы!',\r\n      classes: 'red darken-4',\r\n    })\r\n  }\r\n  const modalEditClickHandler = () => {\r\n    if (editData.name && editData.endDate && editData.startDate) {\r\n      try {\r\n        editCompany(\r\n          editData.id!,\r\n          editData.name,\r\n          editData.startDate,\r\n          editData.endDate\r\n        )\r\n        const i = M.Modal.getInstance(editModalRef.current!)\r\n        i.close()\r\n\r\n        return M.toast({\r\n          html: `<span>Компания <b>${editData.name}</b> была успешна изменена!</span>`,\r\n          classes: 'light-blue darken-1',\r\n        })\r\n      } catch (e) {\r\n        return M.toast({\r\n          html: `<span>Что-то пошло не так: <b>${e}</b></span>`,\r\n          classes: 'red darken-4',\r\n        })\r\n      }\r\n    }\r\n    M.toast({\r\n      html: 'Зполните все поля формы!',\r\n      classes: 'red darken-4',\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!companies.length) fetchCompanies()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    M.Modal.init(createModalRef.current!)\r\n    M.Modal.init(editModalRef.current!)\r\n\r\n    M.Datepicker.init(startCreateDatePickerRef.current!, {\r\n      container: document.querySelector('body'),\r\n      format: 'dd.mm.yyyy',\r\n      onSelect: (selectedDate: Date) =>\r\n        setCreateData(prev => ({\r\n          ...prev,\r\n          startDate: selectedDate,\r\n        })),\r\n    })\r\n    M.Datepicker.init(endCreateDatePickerRef.current!, {\r\n      container: document.querySelector('body'),\r\n      format: 'dd.mm.yyyy',\r\n      onSelect: (selectedDate: Date) =>\r\n        setCreateData(prev => ({\r\n          ...prev,\r\n          endDate: selectedDate,\r\n        })),\r\n    })\r\n\r\n    M.Datepicker.init(startEditDatePickerRef.current!, {\r\n      container: document.querySelector('body'),\r\n      format: 'dd.mm.yyyy',\r\n      onSelect: (selectedDate: Date) =>\r\n        setEditData(prev => ({\r\n          ...prev,\r\n          startDate: selectedDate,\r\n        })),\r\n    })\r\n    M.Datepicker.init(endEditDatePickerRef.current!, {\r\n      container: document.querySelector('body'),\r\n      format: 'dd.mm.yyyy',\r\n      onSelect: (selectedDate: Date) =>\r\n        setEditData(prev => ({\r\n          ...prev,\r\n          endDate: selectedDate,\r\n        })),\r\n    })\r\n  }, [companies.length])\r\n\r\n  return (\r\n    <>\r\n      <AdminHeader />\r\n      <div className='container'>\r\n        <h1>Компании</h1>\r\n        <button\r\n          className='btn light-blue darken-2 waves-effect waves-light'\r\n          onClick={createClickHandler}\r\n        >\r\n          <i className='material-icons left'>add</i>\r\n          Добавить компанию\r\n        </button>\r\n        <table className='mt-4 striped'>\r\n          <thead>\r\n            <tr>\r\n              <th>Название</th>\r\n              <th>Дата начала</th>\r\n              <th>Дата окончания</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {companies.map(c => {\r\n              return (\r\n                <tr key={c.id}>\r\n                  <td>{c.name}</td>\r\n                  <td>{c.startDate.toLocaleDateString()}</td>\r\n                  <td>{c.endDate.toLocaleDateString()}</td>\r\n                  <td>\r\n                    <button\r\n                      className='btn-floating waves-effect waves-light light-blue darken-1'\r\n                      onClick={() => editClickHandler(c.id)}\r\n                    >\r\n                      <i className='material-icons'>edit</i>\r\n                    </button>\r\n                    <button\r\n                      className='btn-floating waves-effect waves-light light-blue darken-1'\r\n                      style={{ marginLeft: 12 }}\r\n                      onClick={() => deleteClickHandler(c.id, c.name)}\r\n                    >\r\n                      <i className='material-icons'>delete</i>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* create modal */}\r\n      <div ref={createModalRef} className='modal'>\r\n        <div className='modal-content'>\r\n          <h4>Добавить компанию</h4>\r\n          <div className='input-field' style={{ marginTop: 16 }}>\r\n            <input\r\n              id='name'\r\n              type='text'\r\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n                setCreateData(prev => ({\r\n                  ...prev,\r\n                  name: event.target.value,\r\n                }))\r\n              }\r\n            />\r\n            <label htmlFor='name'>Название</label>\r\n          </div>\r\n          <div className='input-field'>\r\n            <input type='text' id='date' ref={startCreateDatePickerRef} />\r\n            <label htmlFor='date'>Дата начала</label>\r\n          </div>\r\n          <div className='input-field'>\r\n            <input type='text' id='date' ref={endCreateDatePickerRef} />\r\n            <label htmlFor='date'>Дата окончания</label>\r\n          </div>\r\n        </div>\r\n        <div className='modal-footer'>\r\n          <button\r\n            className='btn light-blue darken-2 waves-effect waves-light'\r\n            onClick={modalCreateClickHandler}\r\n          >\r\n            <i className='material-icons left'>save</i>\r\n            Добавить компанию\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* edit modal */}\r\n      <div ref={editModalRef} className='modal'>\r\n        <div className='modal-content'>\r\n          <h4>\r\n            Изменить компанию <strong>\"{editData.name}\"</strong>\r\n          </h4>\r\n          <div className='input-field' style={{ marginTop: 16 }}>\r\n            <input\r\n              id='name'\r\n              type='text'\r\n              value={editData.name}\r\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n                setEditData(prev => ({\r\n                  ...prev,\r\n                  name: event.target.value,\r\n                }))\r\n              }\r\n            />\r\n            <label htmlFor='name'>Название</label>\r\n          </div>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              id='date'\r\n              value={editData.startDate?.toLocaleDateString()}\r\n              ref={startEditDatePickerRef}\r\n            />\r\n            <label htmlFor='date'>Дата начала</label>\r\n          </div>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              id='date'\r\n              value={editData.startDate?.toLocaleDateString()}\r\n              ref={endEditDatePickerRef}\r\n            />\r\n            <label htmlFor='date'>Дата окончания</label>\r\n          </div>\r\n        </div>\r\n        <div className='modal-footer'>\r\n          <button\r\n            className='btn light-blue darken-2 waves-effect waves-light'\r\n            onClick={modalEditClickHandler}\r\n          >\r\n            <i className='material-icons left'>save</i>\r\n            Сохранить изменения\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { FC, useContext, useEffect, useRef, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { AdminHeader } from '../../components/Header'\r\nimport { RequestContext } from '../../store/RequestContext'\r\nimport M from 'materialize-css'\r\nimport { AuthContext } from '../../store/AuthContext'\r\n\r\nexport const AdminRequestDetailPage: FC = () => {\r\n  const { id } = useParams()\r\n  const pointRef = useRef(null)\r\n  const messageRef = useRef(null)\r\n  const {\r\n    requests,\r\n    fetchRequests,\r\n    setPoints,\r\n    setExamPoints,\r\n    addComment,\r\n    setAward,\r\n  } = useContext(RequestContext)\r\n  const { fio, avatarUrl } = useContext(AuthContext)\r\n  const request = requests.find(r => r.id === Number(id))\r\n  const [message, setMessage] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (!requests.length) fetchRequests()\r\n  }, [])\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    pointRef.current!.focus()\r\n    M.CharacterCounter.init(messageRef.current!)\r\n  }, [requests.length])\r\n\r\n  const saveHandler = () => {\r\n    try {\r\n      // fetch\r\n      M.toast({\r\n        html: 'Данные были успешно сохранены!',\r\n        classes: 'light-blue darken-1',\r\n      })\r\n    } catch (e) {\r\n      M.toast({\r\n        html: `<span>Что-то пошло не так: <b>${e}</b></span>`,\r\n        classes: 'red darken-4',\r\n      })\r\n    }\r\n  }\r\n  const sendHandler = () => {\r\n    try {\r\n      // fetch\r\n      addComment(request?.id!, fio, avatarUrl, message)\r\n      setMessage('')\r\n      M.toast({\r\n        html: 'Вы успешно оставили коментарий!',\r\n        classes: 'light-blue darken-1',\r\n      })\r\n    } catch (e) {\r\n      M.toast({\r\n        html: `<span>Что-то пошло не так: <b>${e}</b></span>`,\r\n        classes: 'red darken-4',\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AdminHeader />\r\n      <div className='container'>\r\n        <h3 className='mt-4'>Информация о заявлении</h3>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Компания</th>\r\n              <th>Наминация</th>\r\n              <th>Статус</th>\r\n              <th>Дата создания</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>{request?.company}</td>\r\n              <td>{request?.nomination}</td>\r\n              <td>{request?.status}</td>\r\n              <td>{request?.createdDate.toLocaleDateString()}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <h3 className='mt-4'>Информация о студенте</h3>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>ФИО</th>\r\n              <th>Телефон</th>\r\n              <th>Статус</th>\r\n              <th>Институт</th>\r\n              <th>Направление</th>\r\n              <th>Форма обучения</th>\r\n              <th>Источник финансирования</th>\r\n              <th>Уровень</th>\r\n              <th>Курс</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>{request?.fio}</td>\r\n              <td>{request?.phone}</td>\r\n              <td>{request?.status}</td>\r\n              <td>{request?.institute}</td>\r\n              <td>{request?.direction}</td>\r\n              <td>{request?.educationForm}</td>\r\n              <td>{request?.financingSource}</td>\r\n              <td>{request?.level}</td>\r\n              <td>{request?.course}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <h3 className='mt-4'>Оценки</h3>\r\n        <div>\r\n          <small>Процент \"{request?.percent}\"</small>\r\n          <input type='text' value={request?.examPoints} />\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              id='point'\r\n              ref={pointRef}\r\n              value={request?.point}\r\n              onKeyPress={event => {\r\n                if (!/[0-9]/.test(event.key)) {\r\n                  event.preventDefault()\r\n                }\r\n              }}\r\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n                setExamPoints(request?.id!, Number(event.target.value))\r\n              }\r\n              style={{ maxWidth: 'fit-content' }}\r\n            />\r\n            <label htmlFor='point'>Балл</label>\r\n          </div>\r\n        </div>\r\n        {request?.tables.map((t, tIdx) => {\r\n          return (\r\n            <React.Fragment key={t.id}>\r\n              <h3 className='mt-4'>{t.title}</h3>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    {t.header.map((h, hIdx) => (\r\n                      <th key={hIdx}>{h}</th>\r\n                    ))}\r\n                    <th>Награда</th>\r\n                    <th>Баллы</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {t.body.map((r, rIdx) => {\r\n                    return (\r\n                      <tr key={rIdx}>\r\n                        {r.data.map((b, bIdx) => {\r\n                          try {\r\n                            new URL(b)\r\n                            return (\r\n                              <td key={bIdx}>\r\n                                <a\r\n                                  className='waves-effect waves-light btn light-blue darken-1'\r\n                                  href={b}\r\n                                  target='_blank'\r\n                                >\r\n                                  <i className='material-icons'>\r\n                                    insert_drive_file\r\n                                  </i>\r\n                                </a>\r\n                              </td>\r\n                            )\r\n                          } catch (e) {\r\n                            return <td key={bIdx}>{b}</td>\r\n                          }\r\n                        })}\r\n                        <td>\r\n                          <input\r\n                            type='text'\r\n                            value={r.award}\r\n                            style={{ maxWidth: 'fit-content' }}\r\n                            key={'award' + tIdx}\r\n                            onChange={(\r\n                              event: React.ChangeEvent<HTMLInputElement>\r\n                            ) =>\r\n                              setAward(\r\n                                request.id,\r\n                                tIdx,\r\n                                rIdx,\r\n                                event.target.value\r\n                              )\r\n                            }\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type='text'\r\n                            value={r.points}\r\n                            style={{ maxWidth: 'fit-content' }}\r\n                            key={'input' + tIdx}\r\n                            onKeyPress={event => {\r\n                              if (!/[0-9]/.test(event.key)) {\r\n                                event.preventDefault()\r\n                              }\r\n                            }}\r\n                            onChange={(\r\n                              event: React.ChangeEvent<HTMLInputElement>\r\n                            ) =>\r\n                              setPoints(\r\n                                request.id,\r\n                                tIdx,\r\n                                rIdx,\r\n                                Number(event.target.value)\r\n                              )\r\n                            }\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    )\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </React.Fragment>\r\n          )\r\n        })}\r\n        <button\r\n          className='btn light-blue darken-2 waves-effect waves-light'\r\n          style={{ marginTop: 36, float: 'right' }}\r\n          onClick={saveHandler}\r\n        >\r\n          <i className='material-icons left'>save</i>\r\n          Сохранить\r\n        </button>\r\n        <h3 className='mt-4'>Коментарии</h3>\r\n        <div>\r\n          {request?.comments.map((c, idx) => {\r\n            return (\r\n              <div key={idx} className='comment'>\r\n                <div className='avatar'>\r\n                  <img src={c.imageUrl} alt='avatar' />\r\n                  <span>{c.name}</span>\r\n                </div>\r\n                <p>{c.text}</p>\r\n                <small>{c.sendedDate.toLocaleString()}</small>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n        <div className='input-field'>\r\n          <textarea\r\n            id='message'\r\n            className='materialize-textarea mt-4'\r\n            data-length='1000'\r\n            value={message}\r\n            onChange={(event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n              if (message.length <= 1000) setMessage(event.target.value)\r\n            }}\r\n            ref={messageRef}\r\n          ></textarea>\r\n          <label className='message'>Сообщение</label>\r\n        </div>\r\n        <button\r\n          className='btn light-blue darken-2 waves-effect waves-light'\r\n          style={{ float: 'right' }}\r\n          onClick={sendHandler}\r\n        >\r\n          <i className='material-icons left'>send</i>\r\n          Отправить\r\n        </button>\r\n      </div>\r\n      <div style={{ height: 100 }}></div>\r\n    </>\r\n  )\r\n}\r\n","import React, { FC, useContext, useEffect, useRef, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { AdminHeader } from '../../components/Header'\r\nimport { RequestContext } from '../../store/RequestContext'\r\nimport M from 'materialize-css'\r\n\r\nexport const AdminRequestListPage: FC = () => {\r\n  const { requests, nominations, statuses, companies, fetchRequests } =\r\n    useContext(RequestContext)\r\n  const [qs, setQs] = useState(requests)\r\n  const [fio, setFio] = useState('')\r\n  const select1 = useRef(null)\r\n  const select2 = useRef(null)\r\n  const select3 = useRef(null)\r\n\r\n  useEffect(() => {\r\n    if (!requests.length) fetchRequests()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    M.FormSelect.init(select1.current!)\r\n    M.FormSelect.init(select2.current!)\r\n    M.FormSelect.init(select3.current!)\r\n    setQs(requests)\r\n  }, [requests.length])\r\n\r\n  const findClickHandler = () => {\r\n    setQs(\r\n      requests.filter(r => {\r\n        const fio_cond = r.fio.toLowerCase().indexOf(fio.toLowerCase()) + 1\r\n        const company_cond =\r\n          // @ts-ignore\r\n          select1.current.value != -1\r\n            ? // @ts-ignore\r\n              r.companyId == select1.current.value!\r\n            : true\r\n        const nomination_cond =\r\n          // @ts-ignore\r\n          select2.current.value! != -1\r\n            ? // @ts-ignore\r\n              r.nomination == select2.current.value!\r\n            : true\r\n        const status_cond =\r\n          // @ts-ignore\r\n          select3.current.value! != -1\r\n            ? // @ts-ignore\r\n              r.status == select3.current.value!\r\n            : true\r\n\r\n        return fio_cond && company_cond && nomination_cond && status_cond\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AdminHeader />\r\n      <div className='container'>\r\n        <h1 className='space-between'>\r\n          Заявки <small>{requests.length} записи(ей)</small>\r\n        </h1>\r\n        <div className='row'>\r\n          <div className='input-field col s3'>\r\n            <input\r\n              id='fio'\r\n              type='text'\r\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n                setFio(event.target.value)\r\n              }\r\n            />\r\n            <label htmlFor='fio'>ФИО</label>\r\n          </div>\r\n          <div className='col s3 input-field'>\r\n            <select ref={select1}>\r\n              <option value={-1}>Все компании</option>\r\n              {companies.map(c => {\r\n                return (\r\n                  <option value={c.id} key={c.id}>\r\n                    {c.name}\r\n                  </option>\r\n                )\r\n              })}\r\n            </select>\r\n            <label>Кампания</label>\r\n          </div>\r\n          <div className='col s3 input-field'>\r\n            <select ref={select2}>\r\n              <option value={-1}>Все наминации</option>\r\n              {nominations.map(n => {\r\n                return (\r\n                  <option value={n} key={n}>\r\n                    {n}\r\n                  </option>\r\n                )\r\n              })}\r\n            </select>\r\n            <label>Наминация</label>\r\n          </div>\r\n          <div className='col s3 input-field'>\r\n            <select ref={select3}>\r\n              <option value={-1}>Все статусы</option>\r\n              {statuses.map(s => {\r\n                return (\r\n                  <option value={s} key={s}>\r\n                    {s}\r\n                  </option>\r\n                )\r\n              })}\r\n            </select>\r\n            <label>Статус</label>\r\n          </div>\r\n          <button\r\n            className='waves-effect waves-light btn light-blue darken-2'\r\n            style={{ float: 'right' }}\r\n            onClick={findClickHandler}\r\n          >\r\n            <i className='material-icons right'>search</i>Поиск\r\n          </button>\r\n        </div>\r\n        <table className='striped'>\r\n          <thead>\r\n            <tr>\r\n              <th>ФИО</th>\r\n              <th>Наминация</th>\r\n              <th>Институт</th>\r\n              <th>Направление</th>\r\n              <th>Обучение</th>\r\n              <th>Дата подачи</th>\r\n              <th>Статус</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {qs.map(r => {\r\n              return (\r\n                <tr key={r.id}>\r\n                  <td>\r\n                    <Link to={`/admin/requests/${r.id}/`}>{r.fio}</Link>\r\n                  </td>\r\n                  <td>{r.nomination}</td>\r\n                  <td>{r.institute}</td>\r\n                  <td>{r.direction}</td>\r\n                  <td>{r.educationForm}</td>\r\n                  <td>{r.createdDate.toLocaleDateString()}</td>\r\n                  <td>{r.status}</td>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { FC, useState, useRef, useEffect, useContext } from 'react'\r\nimport M from 'materialize-css'\r\nimport { AuthContext } from '../store/AuthContext'\r\n\r\nexport const AuthPage: FC = () => {\r\n  const { login } = useContext(AuthContext)\r\n  const [authData, setAuthData] = useState<{\r\n    fio: string\r\n    avatarUrl: string\r\n  }>({\r\n    fio: '',\r\n    avatarUrl: 'https://place-hold.it/120x120/ff9d00/f5f5f5',\r\n  })\r\n  const selectRed = useRef(null)\r\n\r\n  const loginHandler = () => {\r\n    login(\r\n      1,\r\n      authData.fio,\r\n      authData.avatarUrl,\r\n      // @ts-ignore\r\n      selectRed.current!.value,\r\n      ['Матан', 'Высший матан']\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    M.FormSelect.init(selectRed.current!)\r\n  }, [])\r\n\r\n  return (\r\n    <div className='container'>\r\n      <h1>Авторизация</h1>\r\n      <div className='input-field'>\r\n        <input\r\n          id='fio'\r\n          type='text'\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n            setAuthData(prev => ({\r\n              ...prev,\r\n              fio: event.target.value,\r\n            }))\r\n          }\r\n        />\r\n        <label htmlFor='fio'>ФИО</label>\r\n      </div>\r\n      <div className='input-field'>\r\n        <select ref={selectRed}>\r\n          <option value='anonymous'>Anonymous</option>\r\n          <option value='student'>Student</option>\r\n          <option value='admin'>Admin</option>\r\n        </select>\r\n        <label>Роль</label>\r\n      </div>\r\n      <button\r\n        className='btn light-blue darken-2 waves-effect waves-light'\r\n        style={{ float: 'right' }}\r\n        onClick={loginHandler}\r\n      >\r\n        <i className='material-icons left'>person</i>\r\n        Войти\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import React, { FC, useContext, useEffect, useRef, useState } from 'react'\r\nimport { StudentHeader } from '../../components/Header'\r\nimport { AuthContext } from '../../store/AuthContext'\r\nimport { CompanyContext } from '../../store/CompanyContext'\r\nimport { RequestContext } from '../../store/RequestContext'\r\nimport M from 'materialize-css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const StudentCompanyListPage: FC = () => {\r\n  const { companies, fetchCompanies } = useContext(CompanyContext)\r\n  const { requests, nominations, fetchRequests, addRequest } =\r\n    useContext(RequestContext)\r\n  const { id, fio, learningPlans } = useContext(AuthContext)\r\n  const [companyData, setCompanyData] = useState<{\r\n    companyId: number\r\n    company: string\r\n  }>({ companyId: -1, company: '' })\r\n  const createModalRef = useRef(null)\r\n  const nominationRef = useRef(null)\r\n  const planRef = useRef(null)\r\n\r\n  const createClickHandler = (id: number, name: string) => {\r\n    setCompanyData(prev => ({ companyId: id, company: name }))\r\n    const i = M.Modal.getInstance(createModalRef.current!)\r\n    i.open()\r\n  }\r\n  const modalCreateClickHandler = () => {\r\n    // @ts-ignore\r\n    const p = planRef.current!.value\r\n    const n = getSelectValues(nominationRef.current!).join(' | ')\r\n    addRequest(\r\n      companyData.companyId,\r\n      id,\r\n      companyData.company,\r\n      n,\r\n      'Черновик',\r\n      new Date(),\r\n      fio,\r\n      p\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!companies.length) fetchCompanies()\r\n    if (!requests.length) fetchRequests()\r\n  }, [])\r\n  useEffect(() => {\r\n    M.Modal.init(createModalRef.current!)\r\n    M.FormSelect.init(nominationRef.current!)\r\n    M.FormSelect.init(planRef.current!)\r\n  }, [companies.length, requests.length])\r\n\r\n  return (\r\n    <>\r\n      <StudentHeader />\r\n      <div className='container'>\r\n        <h1>Компании</h1>\r\n        <table className='mt-4 striped'>\r\n          <thead>\r\n            <tr>\r\n              <th>Название</th>\r\n              <th>Дата начала</th>\r\n              <th>Дата окончания</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {companies.map(c => {\r\n              return (\r\n                <tr key={c.id}>\r\n                  <td>{c.name}</td>\r\n                  <td>{c.startDate.toLocaleDateString()}</td>\r\n                  <td>{c.endDate.toLocaleDateString()}</td>\r\n                  <td>\r\n                    {requests.filter(r => r.companyId === c.id).length ? (\r\n                      <Link\r\n                        className='btn-floating waves-effect waves-light light-blue darken-1'\r\n                        to={`/requests/${\r\n                          requests.find(\r\n                            r => r.companyId === c.id && r.studentId === id\r\n                          )?.id\r\n                        }`}\r\n                      >\r\n                        <i className='material-icons'>edit</i>\r\n                      </Link>\r\n                    ) : (\r\n                      <button\r\n                        className='btn-floating waves-effect waves-light light-blue darken-1'\r\n                        onClick={() => createClickHandler(c.id, c.name)}\r\n                      >\r\n                        <i className='material-icons'>add</i>\r\n                      </button>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* create modal */}\r\n      <div ref={createModalRef} className='modal'>\r\n        <div className='modal-content'>\r\n          <h4>\r\n            Создать заявку на компанию \"<strong>{companyData.company}</strong>\"\r\n          </h4>\r\n          <div className='input-field' style={{ marginTop: 16 }}>\r\n            <select ref={planRef}>\r\n              {learningPlans.map(p => (\r\n                <option value={p} key={p}>\r\n                  {p}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <label>Учебный план</label>\r\n          </div>\r\n          <div className='input-field'>\r\n            <select multiple ref={nominationRef}>\r\n              {nominations.map(n => (\r\n                <option value={n} key={n}>\r\n                  {n}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <label>Номинация</label>\r\n          </div>\r\n        </div>\r\n        <div className='modal-footer'>\r\n          <button\r\n            className='btn light-blue darken-2 waves-effect waves-light'\r\n            onClick={modalCreateClickHandler}\r\n          >\r\n            <i className='material-icons left'>save</i>\r\n            Создать заявку\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction getSelectValues(select: HTMLSelectElement) {\r\n  var result = []\r\n  var options = select && select.options\r\n  var opt\r\n\r\n  for (var i = 0, iLen = options.length; i < iLen; i++) {\r\n    opt = options[i]\r\n\r\n    if (opt.selected) {\r\n      result.push(opt.value || opt.text)\r\n    }\r\n  }\r\n  return result\r\n}\r\n","import React, { FC, useContext, useEffect, useRef, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { StudentHeader } from '../../components/Header'\r\nimport { RequestContext } from '../../store/RequestContext'\r\nimport { AuthContext } from '../../store/AuthContext'\r\nimport M from 'materialize-css'\r\n\r\nexport const StudentRequestDetailPage: FC = () => {\r\n  const { id } = useParams()\r\n  const pointRef = useRef(null)\r\n  const messageRef = useRef(null)\r\n  const {\r\n    requests,\r\n    fetchRequests,\r\n    addComment,\r\n    setStudentExamPoints,\r\n    setStudentData,\r\n  } = useContext(RequestContext)\r\n  const { fio, avatarUrl } = useContext(AuthContext)\r\n  const request = requests.find(r => r.id === Number(id))\r\n  const [message, setMessage] = useState('')\r\n  const navigate = useNavigate()\r\n\r\n  // if (request?.studentId !== id) navigate('/companies/')\r\n\r\n  useEffect(() => {\r\n    if (!requests.length) fetchRequests()\r\n  }, [])\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    pointRef.current!.focus()\r\n    M.CharacterCounter.init(messageRef.current!)\r\n  }, [requests.length])\r\n\r\n  const sendHandler = () => {\r\n    try {\r\n      // fetch\r\n      addComment(request?.id!, fio, avatarUrl, message)\r\n      setMessage('')\r\n      M.toast({\r\n        html: 'Вы успешно оставили коментарий!',\r\n        classes: 'light-blue darken-1',\r\n      })\r\n    } catch (e) {\r\n      M.toast({\r\n        html: `<span>Что-то пошло не так: <b>${e}</b></span>`,\r\n        classes: 'red darken-4',\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StudentHeader />\r\n      <div className='container'>\r\n        <h3 className='mt-4'>Информация о заявлении</h3>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Компания</th>\r\n              <th>Наминация</th>\r\n              <th>Статус</th>\r\n              <th>Дата создания</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>{request?.company}</td>\r\n              <td>{request?.nomination}</td>\r\n              <td>{request?.status}</td>\r\n              <td>{request?.createdDate.toLocaleDateString()}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <h3 className='mt-4'>Информация о студенте</h3>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>ФИО</th>\r\n              <th>Телефон</th>\r\n              <th>Статус</th>\r\n              <th>Институт</th>\r\n              <th>Направление</th>\r\n              <th>Форма обучения</th>\r\n              <th>Источник финансирования</th>\r\n              <th>Уровень</th>\r\n              <th>Курс</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>{request?.fio}</td>\r\n              <td>{request?.phone}</td>\r\n              <td>{request?.status}</td>\r\n              <td>{request?.institute}</td>\r\n              <td>{request?.direction}</td>\r\n              <td>{request?.educationForm}</td>\r\n              <td>{request?.financingSource}</td>\r\n              <td>{request?.level}</td>\r\n              <td>{request?.course}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <h3 className='mt-4'>Оценки</h3>\r\n        <div>\r\n          <small>Процент \"{request?.percent}\"</small>\r\n          <input\r\n            type='text'\r\n            value={request?.examPoints}\r\n            onKeyPress={event => {\r\n              if (!/[0-9]/.test(event.key)) {\r\n                event.preventDefault()\r\n              }\r\n            }}\r\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n              setStudentExamPoints(request?.id!, Number(event.target.value))\r\n            }\r\n          />\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              id='point'\r\n              ref={pointRef}\r\n              value={request?.point}\r\n              style={{ maxWidth: 'fit-content' }}\r\n            />\r\n            <label htmlFor='point'>Балл</label>\r\n          </div>\r\n        </div>\r\n        {request?.tables.map((t, tIdx) => {\r\n          return (\r\n            <React.Fragment key={t.id}>\r\n              <h3 className='mt-4'>{t.title}</h3>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    {t.header.map((h, hIdx) => (\r\n                      <th key={hIdx}>{h}</th>\r\n                    ))}\r\n                    <th>Награда</th>\r\n                    <th>Баллы</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {t.body.map((r, rIdx) => {\r\n                    return (\r\n                      <tr key={rIdx}>\r\n                        {r.data.map((b, bIdx) => {\r\n                          try {\r\n                            new URL(b)\r\n                            return (\r\n                              <td key={bIdx}>\r\n                                <div className='file-field input-field'>\r\n                                  <div className='waves-effect waves-light btn light-blue darken-1'>\r\n                                    <span>\r\n                                      <i className='material-icons'>\r\n                                        insert_drive_file\r\n                                      </i>\r\n                                    </span>\r\n                                    <input\r\n                                      type='file'\r\n                                      onChange={(\r\n                                        event: React.ChangeEvent<HTMLInputElement>\r\n                                      ) => {\r\n                                        /*\r\n                                          send file to server and get path url from response\r\n                                          then se this url to data\r\n                                        */\r\n                                      }}\r\n                                    />\r\n                                  </div>\r\n                                  <div className='file-path-wrapper'>\r\n                                    <input\r\n                                      className='file-path validate'\r\n                                      style={{ maxWidth: 'fit-content' }}\r\n                                      type='text'\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              </td>\r\n                            )\r\n                          } catch (e) {\r\n                            return (\r\n                              <td key={bIdx}>\r\n                                <input\r\n                                  type='text'\r\n                                  style={{ maxWidth: 'fit-content' }}\r\n                                  value={b}\r\n                                  onChange={(\r\n                                    event: React.ChangeEvent<HTMLInputElement>\r\n                                  ) =>\r\n                                    setStudentData(\r\n                                      request.id,\r\n                                      tIdx,\r\n                                      rIdx,\r\n                                      bIdx,\r\n                                      event.target.value\r\n                                    )\r\n                                  }\r\n                                />\r\n                              </td>\r\n                            )\r\n                          }\r\n                        })}\r\n                        <td>\r\n                          <input\r\n                            type='text'\r\n                            value={r.award}\r\n                            style={{ maxWidth: 'fit-content' }}\r\n                            key={'award' + tIdx}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type='text'\r\n                            value={r.points}\r\n                            style={{ maxWidth: 'fit-content' }}\r\n                            key={'input' + tIdx}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    )\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </React.Fragment>\r\n          )\r\n        })}\r\n        <h3 className='mt-4'>Коментарии</h3>\r\n        <div>\r\n          {request?.comments.map((c, idx) => {\r\n            return (\r\n              <div key={idx} className='comment'>\r\n                <div className='avatar'>\r\n                  <img src={c.imageUrl} alt='avatar' />\r\n                  <span>{c.name}</span>\r\n                </div>\r\n                <p>{c.text}</p>\r\n                <small>{c.sendedDate.toLocaleString()}</small>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n        <div className='input-field'>\r\n          <textarea\r\n            id='message'\r\n            className='materialize-textarea mt-4'\r\n            data-length='1000'\r\n            value={message}\r\n            onChange={(event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n              if (message.length <= 1000) setMessage(event.target.value)\r\n            }}\r\n            ref={messageRef}\r\n          ></textarea>\r\n          <label className='message'>Сообщение</label>\r\n        </div>\r\n        <button\r\n          className='btn light-blue darken-2 waves-effect waves-light'\r\n          style={{ float: 'right' }}\r\n          onClick={sendHandler}\r\n        >\r\n          <i className='material-icons left'>send</i>\r\n          Отправить\r\n        </button>\r\n      </div>\r\n      <div style={{ height: 100 }}></div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\nimport { useRouter } from './hooks/useRouter'\n\nfunction App() {\n  const routes = useRouter()\n\n  return <>{routes}</>\n}\n\nexport default App\n","import React, { useContext } from 'react'\r\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom'\r\nimport { AdminCompanyListPage } from '../pages/admin/AdminCompanyListPage'\r\nimport { AdminRequestDetailPage } from '../pages/admin/AdminRequestDetailPage'\r\nimport { AdminRequestListPage } from '../pages/admin/AdminRequestListPage'\r\nimport { AuthPage } from '../pages/AuthPage'\r\nimport { StudentCompanyListPage } from '../pages/student/StudentCompanyListPage'\r\nimport { StudentRequestDetailPage } from '../pages/student/StudentRequestDetailPage'\r\nimport { AuthContext } from '../store/AuthContext'\r\n\r\nexport const useRouter = () => {\r\n  const { role } = useContext(AuthContext)\r\n\r\n  if (role === 'admin')\r\n    return (\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path='/admin/companies/' element={<AdminCompanyListPage />} />\r\n          <Route path='/admin/requests/' element={<AdminRequestListPage />} />\r\n          <Route\r\n            path='/admin/requests/:id/'\r\n            element={<AdminRequestDetailPage />}\r\n          />\r\n          <Route path='*' element={<Navigate to='/admin/companies/' />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n    )\r\n  if (role === 'student') {\r\n    return (\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path='/companies/' element={<StudentCompanyListPage />} />\r\n          <Route path='/requests/:id' element={<StudentRequestDetailPage />} />\r\n          <Route path='*' element={<Navigate to='/companies/' />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n  if (role === 'anonymous')\r\n    return (\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path='/authentication/' element={<AuthPage />} />\r\n          <Route path='*' element={<Navigate to='/authentication/' />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n    )\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { CompanyProvider } from './store/CompanyContext'\nimport { RequestProvider } from './store/RequestContext'\nimport { AuthProvider } from './store/AuthContext'\nimport App from './App'\n\nReactDOM.render(\n  <CompanyProvider>\n    <RequestProvider>\n      <AuthProvider>\n        <App />\n      </AuthProvider>\n    </RequestProvider>\n  </CompanyProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}